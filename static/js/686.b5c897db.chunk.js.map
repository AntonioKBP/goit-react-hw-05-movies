{"version":3,"file":"static/js/686.b5c897db.chunk.js","mappings":"iOA+EA,UAxEkB,WAAO,IAAD,QACtB,GAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,+GAGSC,EAAAA,EAAAA,IAAA,6CACiBR,EADjB,8CAHT,gBAGNS,EAHM,EAGNA,KAGRV,EAASU,GANK,gDAQdL,QAAQC,IAAI,iBARE,qGAAH,qDAefE,GACD,GAAE,CAACP,IAEJ,IAAQU,EACNZ,EADMY,MAAOC,EACbb,EADaa,aAAcC,EAC3Bd,EAD2Bc,OAAQC,EACnCf,EADmCe,SAAUC,EAC7ChB,EAD6CgB,YAAaC,EAC1DjB,EAD0DiB,aAG5D,OACE,4BACE,SAAC,KAAD,CAAMC,GAAE,oBAAEd,EAASe,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAlC,UACE,mBAAQC,KAAK,SAAb,wBAEF,4BACE,0BACE,gBACEC,IAAKN,GAAe,kCAAoCA,EACxDO,IAAKX,OAGT,4BACE,0BACGA,EADH,IACW,IAAIY,KAAKX,GAAcY,cADlC,QAGA,wCAAgBR,MAChB,sCACA,uBAAIF,KACJ,oCACA,yBAAID,GAAUA,EAAOY,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,MAAlD,cAGJ,4BACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMT,MAAO,CAAEC,KAAI,UAAEhB,EAASe,aAAX,aAAE,EAAgBC,MAAQF,GAAG,OAAhD,qBAKF,yBACE,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAI,UAAEhB,EAASe,aAAX,aAAE,EAAgBC,MAAQF,GAAG,UAAhD,2BAKJ,SAAC,KAAD,SAIP,C","sources":["components/pages/MoviePage/MoviePage.jsx"],"sourcesContent":["import axios from 'axios';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Outlet } from 'react-router-dom';\n\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nconst MoviePage = () => {\n  const [movie, setMovie] = useState([]);\n  const { movieId } = useParams();\n  const location = useLocation();\n  console.log(location);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // setIsLoading(true);\n      try {\n        const { data } = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=7b0e471f76e5da9e6415f6c271770eca`\n        );\n        setMovie(data);\n      } catch (error) {\n        console.log('Ohhhhhh noooo');\n        // setMovie([]);\n        // toast.error('Cannot process your request');\n      } finally {\n        // setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  const { title, release_date, genres, overview, poster_path, vote_average } =\n    movie;\n\n  return (\n    <div>\n      <Link to={location.state?.from ?? '/'}>\n        <button type=\"button\">Go Back</button>\n      </Link>\n      <div>\n        <div>\n          <img\n            src={poster_path && 'https://image.tmdb.org/t/p/w300' + poster_path}\n            alt={title}\n          />\n        </div>\n        <div>\n          <h2>\n            {title}({new Date(release_date).getFullYear()})\n          </h2>\n          <p>User Score: {vote_average}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres && genres.map(({ name }) => name).join(', ')} </p>\n        </div>\n      </div>\n      <div>\n        <p>Additional Information</p>\n        <ul>\n          <li>\n            <Link state={{ from: location.state?.from }} to=\"cast\">\n              Cast\n            </Link>\n          </li>\n\n          <li>\n            <Link state={{ from: location.state?.from }} to=\"reviews\">\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nexport default MoviePage;\n\n// state={{ from: location }}\n"],"names":["useState","movie","setMovie","movieId","useParams","location","useLocation","console","log","useEffect","fetchData","axios","data","title","release_date","genres","overview","poster_path","vote_average","to","state","from","type","src","alt","Date","getFullYear","map","name","join"],"sourceRoot":""}