{"version":3,"file":"static/js/302.de5ed5ca.chunk.js","mappings":"sRAEaA,EAAaC,EAAAA,GAAAA,GAAH,8CAGVC,EAAaD,EAAAA,GAAAA,GAAH,2I,GAQGA,EAAAA,GAAAA,EAAH,6C,QCyCvB,EA/CgB,WACd,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QA2BR,OAzBAE,QAAQC,IAAIL,IAEZM,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,+GAGSC,EAAAA,EAAAA,IAAA,6CACiBN,EADjB,sDAHT,gBAGNO,EAHM,EAGNA,KAGRR,EAAWQ,EAAKC,SANF,gDAUdT,EAAW,IAVG,qGAAH,qDAgBfM,GACD,GAAE,CAACL,KAMF,SAACN,EAAD,UACsB,IAAnBI,EAAQW,QACP,uEAEAX,EAAQY,KAAI,SAAAC,GACV,OACE,UAACf,EAAD,YACE,uBAAIe,EAAOC,UACX,uBAAID,EAAOE,YAFIF,EAAOC,OAK3B,KAIR,C","sources":["components/pages/Reviews/Reviews.styled.jsx","components/pages/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewList = styled.ul`\n  margin-left: 10px;\n`;\nexport const ReviewItem = styled.li`\n  border: 1px solid;\n  width: 900px;\n  border-radius: 5px;\n  background-color: #a2bbe8;\n  margin-bottom: 5px;\n`;\n\nexport const ReviewText = styled.p`\n  font-weight: 500;\n`;\n","// ${BASE_URL}/movie/${movie_id}/reviews?api_key=${KEY}\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { ReviewList, ReviewItem } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  console.log(reviews);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // setIsLoading(true);\n      try {\n        const { data } = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=7b0e471f76e5da9e6415f6c271770eca`\n        );\n        setReviews(data.results);\n        // console.log(data.results);\n        // setImageHits(data);\n      } catch (error) {\n        setReviews([]);\n        // toast.error('Cannot process your request');\n      } finally {\n        // setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  // if (reviews === []) {\n  // }\n\n  return (\n    <ReviewList>\n      {reviews.length === 0 ? (\n        <p>We dont have any reviews for this movie yet</p>\n      ) : (\n        reviews.map(review => {\n          return (\n            <ReviewItem key={review.author}>\n              <b>{review.author}</b>\n              <p>{review.content}</p>\n            </ReviewItem>\n          );\n        })\n      )}\n    </ReviewList>\n  );\n};\n\nexport default Reviews;\n"],"names":["ReviewList","styled","ReviewItem","useState","reviews","setReviews","movieId","useParams","console","log","useEffect","fetchData","axios","data","results","length","map","review","author","content"],"sourceRoot":""}